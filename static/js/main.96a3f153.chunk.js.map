{"version":3,"sources":["components/Login/index.js","context/TabContext.js","components/Header/index.js","components/LoadingView/index.js","components/ReactSlick/index.js","components/PostItem/index.js","components/SomethingWentWrong/index.js","components/SearchResults/index.js","components/Home/index.js","components/ProtectedRoute/index.js","components/ProfileComponent/index.js","components/MyProfile/index.js","components/UserProfile/index.js","components/NotFound/index.js","App.js","index.js"],"names":["Login","props","useState","userName","setUserName","password","setPassword","error","setError","jwtToken","Cookies","get","onSubmitForm","event","preventDefault","userDetails","username","options","method","body","JSON","stringify","fetch","response","json","data","console","log","ok","set","jwt_token","expires","history","replace","error_msg","undefined","to","className","src","alt","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","TabContext","React","createContext","searchResults","changeSearchResults","isSearching","changeSearchingStatus","isSearch","changeSearch","getSearchResults","searchInput","changeSearchInput","withRouter","setSearchInput","match","useContext","onClickLogout","remove","onChangeSearchInput","onClickSearchButton","push","onClick","path","LoadingView","color","height","width","settings","dots","infinite","speed","slidesToShow","slidesToScroll","loadingStatus","ReactSlick","storiesList","setStoriesList","loading","setLoading","getStoriesList","headers","Authorization","updatedData","users_stories","map","item","userId","user_id","user_name","storyUrl","story_url","useEffect","onClickTryAgain","eachLogo","loadingBasedRender","CommentItem","details","comment","PostItem","postId","profilePic","postDetails","comments","likesCount","createdAt","likeStatus","setLikeStatus","likes","setLikes","onClickLike","url","request","like_status","prevState","image_url","caption","SomethingWentWrong","retryFunction","SearchResults","searchingStatus","length","Home","postsList","setPostsList","getPostsList","posts","post_id","profile_pic","post_details","likes_count","created_at","ProtectedRoute","UserStory","isUser","image","UserPost","ProfileComponent","followersCount","postsCount","followingCount","userBio","stories","MyProfile","myDetails","setMyDetails","getMyProfileDetails","profile","followers_count","following_count","user_bio","posts_count","UserProfile","params","user_details","NotFound","App","setSearchResults","setSearch","setSearchingStatus","val","input","Provider","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.96a3f153.chunk.js","sourcesContent":["import {Redirect} from 'react-router-dom'\nimport {useState} from 'react'\nimport Cookies from 'js-cookie'\nimport './index.css'\n\nconst Login = props => {\n  const [userName, setUserName] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const jwtToken = Cookies.get('jwt_token')\n\n  const onSubmitForm = async event => {\n    event.preventDefault()\n    const url = 'https://apis.ccbp.in/login'\n    const userDetails = {username: userName, password}\n    const options = {method: 'POST', body: JSON.stringify(userDetails)}\n    const response = await fetch(url, options)\n    const data = await response.json()\n    console.log(data)\n    if (response.ok) {\n      Cookies.set('jwt_token', data.jwt_token, {expires: 30})\n      setUserName('')\n      setPassword('')\n      const {history} = props\n      history.replace('/')\n    } else {\n      setError(data.error_msg)\n    }\n  }\n\n  if (jwtToken !== undefined) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"img-container\">\n        <img\n          src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1665300077/Instagram%20Clone/Layer_2login-page-image_xy0dqq.svg\"\n          alt=\"website login\"\n          className=\"login-image\"\n        />\n      </div>\n      <div className=\"details-container\">\n        <form className=\"login-form\" onSubmit={onSubmitForm}>\n          <div className=\"form-logo-container\">\n            <img\n              src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1665299514/Instagram%20Clone/GroupInsta-share_dwov61.svg\"\n              alt=\"website logo\"\n              className=\"login-logo\"\n            />\n            <h1 className=\"form-heading\">Insta Share</h1>\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"username\" className=\"label-text\">\n              USERNAME\n            </label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              className=\"input-field\"\n              value={userName}\n              onChange={event => {\n                setUserName(event.target.value)\n              }}\n            />\n          </div>\n          <div className=\"input-container\">\n            <label htmlFor=\"password\" className=\"label-text\">\n              PASSWORD\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              placeholder=\"Username\"\n              className=\"input-field\"\n              value={password}\n              onChange={event => {\n                setPassword(event.target.value)\n              }}\n            />\n          </div>\n          {error !== '' && <p className=\"error-text\">{error}</p>}\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login\n","import React from 'react'\n\nconst TabContext = React.createContext({\n  searchResults: [],\n  changeSearchResults: () => {},\n  isSearching: 'INITIAL',\n  changeSearchingStatus: () => {},\n  isSearch: false,\n  changeSearch: () => {},\n  getSearchResults: () => {},\n  searchInput: '',\n  changeSearchInput: () => {},\n})\n\nexport default TabContext\n","import {useContext, useState} from 'react'\nimport {Link, withRouter} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport {FaSearch} from 'react-icons/fa'\nimport TabContext from '../../context/TabContext'\nimport './index.css'\n\nconst Header = props => {\n  const [searchInput, setSearchInput] = useState('')\n  const {history, match} = props\n  const {changeSearch, getSearchResults} = useContext(TabContext)\n\n  const onClickLogout = () => {\n    Cookies.remove('jwt_token')\n    history.replace('/login')\n  }\n\n  const onChangeSearchInput = event => {\n    setSearchInput(event.target.value)\n  }\n\n  const onClickSearchButton = async () => {\n    history.push('/')\n    getSearchResults(searchInput)\n  }\n\n  const renderNavItems = () => (\n    <nav className=\"nav-container\">\n      <ul className=\"nav-items-list\">\n        <Link to=\"/\" className=\"nav-item\">\n          <li\n            className={match.path === '/' ? 'active' : null}\n            onClick={() => {\n              changeSearch(false)\n            }}\n          >\n            Home\n          </li>\n        </Link>\n        <Link to=\"/my-profile\" className=\"nav-item\">\n          <li className={match.path === '/my-profile' ? 'active' : null}>\n            Profile\n          </li>\n        </Link>\n      </ul>\n    </nav>\n  )\n\n  const renderSearchContainer = () => (\n    <div className=\"search-container\">\n      <input\n        type=\"search\"\n        className=\"search-input\"\n        placeholder=\"Search Caption\"\n        onChange={onChangeSearchInput}\n        value={searchInput}\n      />\n      <button\n        type=\"button\"\n        className=\"search-button\"\n        onClick={onClickSearchButton}\n      >\n        <FaSearch />\n      </button>\n    </div>\n  )\n\n  const renderLogOutButton = () => (\n    <div>\n      <button type=\"button\" className=\"logout-button\" onClick={onClickLogout}>\n        Logout\n      </button>\n    </div>\n  )\n\n  return (\n    <div className=\"main-header-container\">\n      <div className=\"sub-header-container\">\n        <div className=\"header-logo-container\">\n          <Link to=\"/\">\n            <img\n              src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1665299514/Instagram%20Clone/GroupInsta-share_dwov61.svg\"\n              alt=\"website logo\"\n              className=\"header-logo\"\n            />\n          </Link>\n          <h1 className=\"header-heading\">Insta Share</h1>\n        </div>\n        <div className=\"header-right-container\">\n          {renderSearchContainer()}\n          {renderNavItems()}\n          {renderLogOutButton()}\n        </div>\n      </div>\n      <hr className=\"line\" />\n    </div>\n  )\n}\n\nexport default withRouter(Header)\n","import Loader from 'react-loader-spinner'\nimport './index.css'\n\nconst LoadingView = () => (\n  <div className=\"loader-container\">\n    <Loader type=\"TailSpin\" color=\"#4094EF\" height={40} width={30} />\n  </div>\n)\nexport default LoadingView\n","import {useState, useEffect} from 'react'\nimport Slider from 'react-slick'\nimport Cookies from 'js-cookie'\nimport LoadingView from '../LoadingView'\nimport './index.css'\n\nconst settings = {\n  dots: false,\n  infinite: false,\n  speed: 500,\n  slidesToShow: 7,\n  slidesToScroll: 1,\n}\n\nconst loadingStatus = {\n  initial: 'INITIAL',\n  progress: 'PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst ReactSlick = () => {\n  const [storiesList, setStoriesList] = useState([])\n  const [loading, setLoading] = useState(loadingStatus.initial)\n  const jwtToken = Cookies.get('jwt_token')\n\n  const getStoriesList = async () => {\n    setLoading(loadingStatus.progress)\n    const url = 'https://apis.ccbp.in/insta-share/stories'\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      const updatedData = data.users_stories.map(item => ({\n        userId: item.user_id,\n        userName: item.user_name,\n        storyUrl: item.story_url,\n      }))\n      setStoriesList(updatedData)\n      setLoading(loadingStatus.success)\n    } else {\n      setLoading(loadingStatus.failure)\n    }\n  }\n\n  useEffect(() => {\n    getStoriesList()\n  }, [])\n\n  const onClickTryAgain = () => {\n    getStoriesList()\n  }\n\n  const renderFailureView = () => (\n    <div className=\"stories-failure-container\">\n      <img\n        src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666112932/Instagram%20Clone/Iconsomething-went-wrong_u66nvd.svg\"\n        alt=\"failure view\"\n        className=\"stories-failure-icon\"\n      />\n      <p className=\"stories-failure-description\">\n        Something went wrong. Please try again\n      </p>\n      <button\n        type=\"button\"\n        className=\"stories-try-again-button\"\n        onClick={onClickTryAgain}\n      >\n        Try again\n      </button>\n    </div>\n  )\n\n  const loadingBasedRender = () => {\n    switch (loading) {\n      case loadingStatus.progress:\n        return <LoadingView />\n      case loadingStatus.success:\n        return (\n          <div className=\"slick-container\">\n            <Slider {...settings}>\n              {storiesList.map(eachLogo => {\n                const {userId, storyUrl, userName} = eachLogo\n                return (\n                  <div className=\"slick-item\" key={userId}>\n                    <img\n                      className=\"logo-image\"\n                      src={storyUrl}\n                      alt=\"user story\"\n                    />\n                    <p className=\"story-username\">{userName}</p>\n                  </div>\n                )\n              })}\n            </Slider>\n          </div>\n        )\n      case loadingStatus.failure:\n        return renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  return <div className=\"slick-main-container\">{loadingBasedRender()}</div>\n}\n\nexport default ReactSlick\n","import {useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport Cookies from 'js-cookie'\nimport {BsHeart} from 'react-icons/bs'\nimport {FcLike} from 'react-icons/fc'\nimport {FaRegComment} from 'react-icons/fa'\nimport {BiShareAlt} from 'react-icons/bi'\n\nimport './index.css'\n\nconst CommentItem = props => {\n  const {details} = props\n  return (\n    <li className=\"\">\n      <p className=\"comment-item\">\n        {<span className=\"commented-user\">{details.user_name}</span>}\n        {` ${details.comment}`}\n      </p>\n    </li>\n  )\n}\n\nconst PostItem = props => {\n  const {details} = props\n  const {\n    userId,\n    postId,\n    userName,\n    profilePic,\n    postDetails,\n    comments,\n    likesCount,\n    createdAt,\n  } = details\n\n  const [likeStatus, setLikeStatus] = useState(true)\n  const [likes, setLikes] = useState(likesCount)\n  const jwtToken = Cookies.get('jwt_token')\n\n  const onClickLike = async () => {\n    const url = `https://apis.ccbp.in/insta-share/posts/${postId}/like`\n    const request = {like_status: likeStatus}\n    const options = {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      body: JSON.stringify(request),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    setLikeStatus(prevState => !prevState)\n    if (likeStatus) {\n      setLikes(prevState => prevState + 1)\n    } else {\n      setLikes(prevState => prevState - 1)\n    }\n  }\n\n  const renderLikeShare = () => (\n    <div className=\"buttons-container\">\n      {likeStatus ? (\n        <button\n          type=\"button\"\n          className=\"button like-button\"\n          onClick={onClickLike}\n        >\n          <BsHeart />\n        </button>\n      ) : (\n        <button\n          type=\"button\"\n          className=\"button dis-like-button\"\n          onClick={onClickLike}\n        >\n          <FcLike />\n        </button>\n      )}\n      <button type=\"button\" className=\"button\">\n        <FaRegComment />\n      </button>\n      <button type=\"button\" className=\"button \">\n        <BiShareAlt />\n      </button>\n    </div>\n  )\n\n  const renderLikesCountCaption = () => (\n    <div className=\"likes-caption-container\">\n      <p className=\"likes-count\">{likes} likes</p>\n      <p className=\"caption\">{postDetails.caption}</p>\n      <ul className=\"comments-list\">\n        {comments.map(item => (\n          <CommentItem key={item.user_id} details={item} />\n        ))}\n      </ul>\n      <p className=\"post-created-at\">{createdAt}</p>\n    </div>\n  )\n\n  return (\n    <li className=\"post-list-item\">\n      <div className=\"username-container\">\n        <div className=\"user-icon-container\">\n          <img\n            src={profilePic}\n            alt=\"post author profile\"\n            className=\"user-icon\"\n          />\n        </div>\n        <Link to={`/users/${userId}`} className=\"username-link-text\">\n          <p className=\"post-username\">{userName}</p>\n        </Link>\n      </div>\n      <img src={postDetails.image_url} alt=\"post\" className=\"post-pic\" />\n      <div className=\"post-bottom-container\">\n        {renderLikeShare()}\n        {renderLikesCountCaption()}\n      </div>\n    </li>\n  )\n}\n\nexport default PostItem\n","import './index.css'\n\nconst SomethingWentWrong = props => {\n  const {retryFunction} = props\n  const onClickTryAgain = () => {\n    retryFunction()\n  }\n  return (\n    <div className=\"failure-container\">\n      <img\n        src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666114660/Instagram%20Clone/Group_7522-something-wrong_j6dyks.svg\"\n        alt=\"failure view\"\n        className=\"failure-image\"\n      />\n      <p className=\"failure-description\">\n        Something went wrong. Please try again\n      </p>\n      <button\n        type=\"button\"\n        className=\"home-page-button\"\n        onClick={onClickTryAgain}\n      >\n        Try again\n      </button>\n    </div>\n  )\n}\n\nexport default SomethingWentWrong\n","import {useContext, useState, useEffect} from 'react'\nimport Cookies from 'js-cookie'\nimport PostItem from '../PostItem'\nimport LoadingView from '../LoadingView'\nimport SomethingWentWrong from '../SomethingWentWrong'\nimport TabContext from '../../context/TabContext'\nimport './index.css'\n\nconst loadingStatus = {\n  initial: 'INITIAL',\n  progress: 'PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst SearchResults = props => {\n  const {details, searchingStatus} = props\n  const {getSearchResults} = useContext(TabContext)\n\n  const renderNoResultsView = () => (\n    <div className=\"no-results-container\">\n      <img\n        src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1665925315/Instagram%20Clone/Groupno_results-image_z3wnqg.svg\"\n        alt=\"search not found\"\n        className=\"no-results-img\"\n      />\n      <h1 className=\"no-results-heading\">Search Not Found</h1>\n      <p className=\"no-results-description\">\n        Try different keyword or search again\n      </p>\n    </div>\n  )\n\n  const loadingBasedRender = () => {\n    switch (searchingStatus) {\n      case loadingStatus.progress:\n        return <LoadingView />\n      case loadingStatus.success:\n        return (\n          <>\n            {details.length === 0 ? (\n              renderNoResultsView()\n            ) : (\n              <>\n                <h1 className=\"search-results-heading\">Search Results</h1>\n                <div className=\"search-results-container\">\n                  <ul className=\"search-results-list\">\n                    {details.map(item => (\n                      <PostItem details={item} key={item.postId} />\n                    ))}\n                  </ul>\n                </div>\n              </>\n            )}\n          </>\n        )\n      case loadingStatus.failure:\n        return <SomethingWentWrong retryFunction={getSearchResults} />\n      default:\n        return null\n    }\n  }\n\n  return <div className=\"search-results\">{loadingBasedRender()}</div>\n}\n\nexport default SearchResults\n","import {useEffect, useState, useContext} from 'react'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport ReactSlick from '../ReactSlick'\nimport LoadingView from '../LoadingView'\nimport PostItem from '../PostItem'\nimport TabContext from '../../context/TabContext'\nimport SearchResults from '../SearchResults'\nimport './index.css'\n\nconst loadingStatus = {\n  initial: 'INITIAL',\n  progress: 'PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst Home = () => {\n  const [postsList, setPostsList] = useState([])\n  const [loading, setLoading] = useState(loadingStatus.initial)\n  const jwtToken = Cookies.get('jwt_token')\n  const {searchResults, isSearch, isSearching} = useContext(TabContext)\n\n  const getPostsList = async () => {\n    setLoading(loadingStatus.progress)\n    const url = 'https://apis.ccbp.in/insta-share/posts'\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      const updatedData = data.posts.map(item => ({\n        postId: item.post_id,\n        userId: item.user_id,\n        userName: item.user_name,\n        profilePic: item.profile_pic,\n        postDetails: item.post_details,\n        likesCount: item.likes_count,\n        comments: item.comments,\n        createdAt: item.created_at,\n      }))\n      setPostsList(updatedData)\n      setLoading(loadingStatus.success)\n    } else {\n      setLoading(loadingStatus.failure)\n    }\n  }\n\n  useEffect(() => {\n    getPostsList()\n  }, [])\n\n  const onClickTryAgain = () => {\n    getPostsList()\n  }\n\n  const renderFailureView = () => (\n    <div className=\"posts-failure-container\">\n      <img\n        src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1666112932/Instagram%20Clone/Iconsomething-went-wrong_u66nvd.svg\"\n        alt=\"failure view\"\n        className=\"posts-failure-icon\"\n      />\n      <p className=\"posts-failure-description\">\n        Something went wrong. Please try again\n      </p>\n      <button\n        type=\"button\"\n        className=\"posts-try-again-button\"\n        onClick={onClickTryAgain}\n      >\n        Try again\n      </button>\n    </div>\n  )\n\n  const loadingBasedRender = () => {\n    switch (loading) {\n      case loadingStatus.progress:\n        return <LoadingView />\n      case loadingStatus.success:\n        return (\n          <ul className=\"posts-list\">\n            {postsList.map(item => (\n              <PostItem key={item.postId} details={item} />\n            ))}\n          </ul>\n        )\n      case loadingStatus.failure:\n        return renderFailureView()\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"home-container\">\n      <Header />\n      {isSearch ? (\n        <SearchResults details={searchResults} searchingStatus={isSearching} />\n      ) : (\n        <>\n          <ReactSlick />\n          <div className=\"posts-container\">{loadingBasedRender()}</div>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Home\n","import {Redirect, Route} from 'react-router-dom'\nimport Cookies from 'js-cookie'\n\nconst ProtectedRoute = props => {\n  const jwtToken = Cookies.get('jwt_token')\n\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />\n  }\n  return <Route {...props} />\n}\n\nexport default ProtectedRoute\n","import {BsGrid3X3} from 'react-icons/bs'\nimport {BiCamera} from 'react-icons/bi'\nimport './index.css'\n\nconst UserStory = props => {\n  const {details, isUser} = props\n  return (\n    <li className=\"user-story-item\">\n      <img\n        src={details.image}\n        alt={isUser ? 'user story' : 'my story'}\n        className=\"user-profile-story\"\n      />\n    </li>\n  )\n}\n\nconst UserPost = props => {\n  const {details, isUser} = props\n  return (\n    <li className=\"user-post-item\">\n      <img\n        src={details.image}\n        alt={isUser ? 'user post' : 'my post'}\n        className=\"user-post-pic\"\n      />\n    </li>\n  )\n}\n\nconst ProfileComponent = props => {\n  const {details, isUser} = props\n  const {\n    profilePic,\n    userName,\n    followersCount,\n    postsCount,\n    followingCount,\n    userId,\n    userBio,\n    stories,\n    posts,\n  } = details\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <img\n          src={profilePic}\n          alt={isUser ? 'user profile' : 'my profile'}\n          className=\"profile-pic\"\n        />\n        <div className=\"profile-details-container\">\n          <h1 className=\"profile-heading\">{userName}</h1>\n          <div className=\"followers-posts-container\">\n            <p className=\"posts-count\">{postsCount} posts</p>\n            <p className=\"posts-count\">{followersCount} followers</p>\n            <p className=\"posts-count\">{followingCount} following</p>\n          </div>\n          <p className=\"user-profile-id\">{userId}</p>\n          <p className=\"user-profile-bio\">{userBio}</p>\n        </div>\n      </div>\n      <ul className=\"user-stories-list\">\n        {stories.map(item => (\n          <UserStory details={item} key={item.id} isUser={isUser} />\n        ))}\n      </ul>\n      <hr className=\"profile-line\" />\n      <div className=\"user-posts-container\">\n        <div className=\"user-posts-header\">\n          <BsGrid3X3 />\n          <h1 className=\"user-posts-heading\">Posts</h1>\n        </div>\n        {posts.length === 0 ? (\n          <div className=\"no-posts-container\">\n            <div className=\"no-posts-img\">\n              <BiCamera />\n            </div>\n            <h1 className=\"no-posts-heading\">No Posts Yet</h1>\n          </div>\n        ) : (\n          <ul className=\"user-posts-list\">\n            {posts.map(item => (\n              <UserPost details={item} key={item.id} isUser={isUser} />\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileComponent\n","import {useState, useEffect} from 'react'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport LoadingView from '../LoadingView'\nimport ProfileComponent from '../ProfileComponent'\nimport SomethingWentWrong from '../SomethingWentWrong'\nimport './index.css'\n\nconst loadingStatus = {\n  initial: 'INITIAL',\n  progress: 'PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst MyProfile = () => {\n  const [myDetails, setMyDetails] = useState({})\n  const [loading, setLoading] = useState(loadingStatus.initial)\n  const jwtToken = Cookies.get('jwt_token')\n\n  const getMyProfileDetails = async () => {\n    setLoading(loadingStatus.progress)\n    const url = 'https://apis.ccbp.in/insta-share/my-profile'\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      const {profile} = data\n      const updatedData = {\n        id: profile.id,\n        userId: profile.user_id,\n        userName: profile.user_name,\n        profilePic: profile.profile_pic,\n        followersCount: profile.followers_count,\n        followingCount: profile.following_count,\n        userBio: profile.user_bio,\n        posts: profile.posts,\n        postsCount: profile.posts_count,\n        stories: profile.stories,\n      }\n      setMyDetails(updatedData)\n      setLoading(loadingStatus.success)\n    } else {\n      setLoading(loadingStatus.failure)\n    }\n  }\n\n  useEffect(() => {\n    getMyProfileDetails()\n  }, [])\n\n  const loadingBasedRender = () => {\n    switch (loading) {\n      case loadingStatus.progress:\n        return <LoadingView />\n      case loadingStatus.success:\n        return <ProfileComponent details={myDetails} />\n      case loadingStatus.failure:\n        return <SomethingWentWrong retryFunction={getMyProfileDetails} />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"my-profile-container\">\n      <Header />\n      {loadingBasedRender()}\n    </div>\n  )\n}\n\nexport default MyProfile\n","import {useState, useEffect} from 'react'\nimport Cookies from 'js-cookie'\nimport Header from '../Header'\nimport LoadingView from '../LoadingView'\nimport ProfileComponent from '../ProfileComponent'\nimport SomethingWentWrong from '../SomethingWentWrong'\nimport './index.css'\n\nconst loadingStatus = {\n  initial: 'INITIAL',\n  progress: 'PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst UserProfile = props => {\n  const [myDetails, setMyDetails] = useState({})\n  const [loading, setLoading] = useState(loadingStatus.initial)\n  const jwtToken = Cookies.get('jwt_token')\n  const {match} = props\n  const {params} = match\n\n  const getMyProfileDetails = async () => {\n    setLoading(loadingStatus.progress)\n    const url = `https://apis.ccbp.in/insta-share/users/${params.id}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      console.log(data)\n      const profile = data.user_details\n      const updatedData = {\n        id: profile.id,\n        userId: profile.user_id,\n        userName: profile.user_name,\n        profilePic: profile.profile_pic,\n        followersCount: profile.followers_count,\n        followingCount: profile.following_count,\n        userBio: profile.user_bio,\n        posts: profile.posts,\n        postsCount: profile.posts_count,\n        stories: profile.stories,\n      }\n      setMyDetails(updatedData)\n      setLoading(loadingStatus.success)\n    } else {\n      setLoading(loadingStatus.failure)\n    }\n  }\n\n  useEffect(() => {\n    getMyProfileDetails()\n  }, [])\n\n  const loadingBasedRender = () => {\n    switch (loading) {\n      case loadingStatus.progress:\n        return <LoadingView />\n      case loadingStatus.success:\n        return <ProfileComponent details={myDetails} isUser />\n      case loadingStatus.failure:\n        return <SomethingWentWrong retryFunction={getMyProfileDetails} />\n      default:\n        return null\n    }\n  }\n\n  return (\n    <div className=\"my-profile-container\">\n      <Header />\n      {loadingBasedRender()}\n    </div>\n  )\n}\n\nexport default UserProfile\n","import {Link} from 'react-router-dom'\nimport './index.css'\n\nconst NotFound = () => (\n  <div className=\"not-found-container\">\n    <img\n      src=\"https://res.cloudinary.com/dqwufvygi/image/upload/v1665930822/Instagram%20Clone/erroring_1page-not-found_uqv3bl.svg\"\n      alt=\"page not found\"\n      className=\"not-found-img\"\n    />\n    <h1 className=\"not-found-heading\">Page Not Found</h1>\n    <p className=\"not-found-description\">\n      we are sorry, the page you requested could not be found.\n      <br /> Please go back to the homepage\n    </p>\n    <Link to=\"/\">\n      <button type=\"button\" className=\"home-page-button\">\n        Home Page\n      </button>\n    </Link>\n  </div>\n)\n\nexport default NotFound\n","import {Route, Switch} from 'react-router-dom'\nimport {useState} from 'react'\nimport Cookies from 'js-cookie'\nimport Login from './components/Login'\nimport Home from './components/Home'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport TabContext from './context/TabContext'\nimport MyProfile from './components/MyProfile'\nimport UserProfile from './components/UserProfile'\nimport NotFound from './components/NotFound'\n\nimport './App.css'\n\nconst loadingStatus = {\n  initial: 'INITIAL',\n  progress: 'PROGRESS',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n}\n\nconst App = () => {\n  const [searchResults, setSearchResults] = useState([])\n  const [isSearch, setSearch] = useState(false)\n  const [isSearching, setSearchingStatus] = useState('INITIAL')\n  const jwtToken = Cookies.get('jwt_token')\n  const [searchInput, setSearchInput] = useState('')\n\n  const changeSearchInput = val => {\n    setSearchInput(val)\n  }\n\n  const changeSearchingStatus = val => {\n    setSearchingStatus(val)\n  }\n\n  const changeSearchResults = data => {\n    setSearchResults(data)\n  }\n\n  const changeSearch = val => {\n    setSearch(val)\n  }\n\n  const getSearchResults = async input => {\n    changeSearch(true)\n    changeSearchingStatus(loadingStatus.progress)\n    const url = `https://apis.ccbp.in/insta-share/posts?search=${input}`\n    const options = {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok) {\n      const updatedData = data.posts.map(item => ({\n        postId: item.post_id,\n        userId: item.user_id,\n        userName: item.user_name,\n        profilePic: item.profile_pic,\n        postDetails: item.post_details,\n        likesCount: item.likes_count,\n        comments: item.comments,\n        createdAt: item.created_at,\n      }))\n      changeSearchResults(updatedData)\n      changeSearchingStatus(loadingStatus.success)\n    } else {\n      changeSearchingStatus(loadingStatus.failure)\n    }\n  }\n\n  return (\n    <TabContext.Provider\n      value={{\n        searchResults,\n        changeSearchResults,\n        isSearch,\n        changeSearch,\n        isSearching,\n        changeSearchingStatus,\n        getSearchResults,\n        searchInput,\n        changeSearchInput,\n      }}\n    >\n      <Switch>\n        <Route exact path=\"/login\" component={Login} />\n        <ProtectedRoute exact path=\"/\" component={Home} />\n        <ProtectedRoute exact path=\"/my-profile\" component={MyProfile} />\n        <ProtectedRoute exact path=\"/users/:id\" component={UserProfile} />\n        <Route component={NotFound} />\n      </Switch>\n    </TabContext.Provider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport {BrowserRouter} from 'react-router-dom'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}